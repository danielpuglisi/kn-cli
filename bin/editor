#!/usr/bin/env ruby
# frozen_string_literal: true

require 'thor'
require_relative '../lib/editor'

class CLI < Thor
  def self.exit_on_failure?
    true
  end

  default_task :start

  desc 'start', 'Start the editor to assign points'
  method_option :kn, type: :string, desc: 'KN configuration file', required: true
  method_option :students, type: :string, desc: 'Students configuration file', required: true
  method_option :data, type: :string, desc: 'Data configuration file', required: true
  def start
    Editor.new(options[:students], options[:kn], options[:data]).run
  rescue Thor::RequiredArgumentMissingError => e
    puts "Error: #{e.message}"
  end
end

CLI.start
